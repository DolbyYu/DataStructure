//
// Created by aisheng on 2020/4/20.
//

#include <iostream>
#include "OpenLock.h"
#include <sys/time.h>

using namespace std;

static unsigned long get_current_time() {
    struct timeval tv{};

    gettimeofday(&tv, nullptr);

    return (tv.tv_sec * 1000000 + tv.tv_usec);
}


int main() {

    vector<string> deadEnds{};
    string target = "6023";

    unsigned long time_0, time_1;
    time_0 = get_current_time();
    OpenLock oOpenLock(4);

    cout << oOpenLock.openLock(deadEnds, target) << endl;

    time_1 = get_current_time();
    double timeCost = (time_1 - time_0)/1000.0;

    cout << timeCost << endl;

    return 0;

}